/*
Задача 4.Напишете функцията int binarySearch(int a[], int n, int
x), която получава като първи аргумент началото на масив а,
втория аргумент е дължината на масива, а третия аргумент е
числото, което търсим. Знаем, че масива в който ще търсим
елемента е предварително подреден. Сравняваме тъсения
елемент с елемента в средата на масива. Ако той е по голям от
този в средата търсим елемента от средата до края, ако е помалък го търсим в частта от началото до средата. Това се
повтаря, докато елемента от масива не стане равен с търсения.
Тогава връщаме номера на който се намира елемента в масива
или -1 ако не се съдържа в масива.
*/

#include <stdio.h>
#include <math.h>

int binarySearch(int a[], int n, int x);

int main(void){

    int array[] = {1,2,3,4,5,6,7,8,9,10};
    int size = sizeof(array)/ sizeof(array[0]) - 1;
    int numToFind = 5;

    
    int result = binarySearch(array, size, numToFind);

    printf("%d", result);

    return 0;
}

int binarySearch(int a[], int n, int x){

    int middle = ceil(n / 2);


    if(a[middle] <= x) {
        for (middle; middle <= n; middle++){
            if(x == a[middle]){
                break;
            }
        }
    } else if (a[middle] > x) {
        for (middle; middle >= 0; middle--){
            if(x == a[middle]){
                break;
            }
        }
    } else {
        middle = -1;
    }
    
    return middle;
}
